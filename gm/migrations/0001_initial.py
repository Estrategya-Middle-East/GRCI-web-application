# Generated by Django 5.1.1 on 2024-12-11 10:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main_app', '0007_group_alter_staff_department_staff_group_section_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EthicalGovernance',
            fields=[
                ('ethics_id', models.AutoField(primary_key=True, serialize=False)),
                ('code_of_conduct_reference', models.TextField(blank=True, null=True)),
                ('incident_type', models.CharField(max_length=255)),
                ('resolution_status', models.CharField(max_length=50)),
                ('follow_up_actions', models.TextField(blank=True, null=True)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('supporting_documents', models.FileField(upload_to='ethics_documents/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('ethical_risk_rating', models.TextField(blank=True, null=True)),
                ('incident_reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incident_reported_by', to='main_app.staff')),
                ('responsible_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='GovernanceDocumentManagement',
            fields=[
                ('document_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_title', models.CharField(max_length=255)),
                ('upload_date', models.DateField(blank=True, null=True)),
                ('version', models.CharField(max_length=50)),
                ('document_type', models.CharField(max_length=255)),
                ('associated_processes', models.TextField(blank=True, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_by', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='GovernanceImprovement',
            fields=[
                ('improvement_id', models.AutoField(primary_key=True, serialize=False)),
                ('initiative_name', models.CharField(max_length=255)),
                ('improvement_objective', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('target_completion_date', models.DateField(blank=True, null=True)),
                ('progress_status', models.CharField(max_length=50)),
                ('resources_allocated', models.TextField(blank=True, null=True)),
                ('impact_assessment', models.TextField(blank=True, null=True)),
                ('supporting_documents', models.FileField(upload_to='improvement_documents/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='improvement_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='GovernanceStructure',
            fields=[
                ('structure_id', models.AutoField(primary_key=True, serialize=False)),
                ('charter_name', models.CharField(max_length=255)),
                ('roles_and_responsibilities', models.TextField(blank=True, null=True)),
                ('approval_status', models.CharField(max_length=50)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('review_frequency', models.CharField(max_length=50)),
                ('supporting_documents', models.FileField(upload_to='governance_documents/')),
                ('review_date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('approver_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.staff')),
                ('stewardship_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stewardship_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='LeadershipAccountability',
            fields=[
                ('leadership_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=255)),
                ('responsibilities', models.TextField(blank=True, null=True)),
                ('decision_authority', models.TextField(blank=True, null=True)),
                ('approval_status', models.CharField(max_length=50)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('key_metrics', models.TextField(blank=True, null=True)),
                ('improvement_areas', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('accountable_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accountable_to', to='main_app.staff')),
                ('role_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceReporting',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_type', models.CharField(max_length=255)),
                ('reporting_period', models.TextField(blank=True, null=True)),
                ('kpis_assessed', models.TextField(blank=True, null=True)),
                ('performance_summary', models.TextField(blank=True, null=True)),
                ('distribution_list', models.TextField(blank=True, null=True)),
                ('review_frequency', models.CharField(max_length=50)),
                ('supporting_documents', models.FileField(upload_to='performance_documents/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performance_approved_by', to='main_app.staff')),
                ('prepared_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prepared_by', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='PurposeAndValues',
            fields=[
                ('purpose_id', models.AutoField(primary_key=True, serialize=False)),
                ('purpose_statement', models.TextField(blank=True, null=True)),
                ('core_values', models.TextField(blank=True, null=True)),
                ('ethical_principles', models.TextField(blank=True, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('stakeholder_feedback', models.TextField(blank=True, null=True)),
                ('review_frequency', models.CharField(max_length=50)),
                ('supporting_documents', models.FileField(upload_to='purpose_documents/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_by', to='main_app.staff')),
                ('stewardship_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purpose_stewardship_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceManagement',
            fields=[
                ('resource_id', models.AutoField(primary_key=True, serialize=False)),
                ('resource_type', models.CharField(max_length=255)),
                ('allocation_date', models.DateField(blank=True, null=True)),
                ('risk_assessment', models.TextField(blank=True, null=True)),
                ('utilization_metrics', models.TextField(blank=True, null=True)),
                ('compliance_status', models.CharField(max_length=50)),
                ('last_audit_date', models.DateField(blank=True, null=True)),
                ('supporting_documents', models.FileField(upload_to='resource_documents/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('allocated_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_to', to='main_app.staff')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAndCompliance',
            fields=[
                ('risk_compliance_id', models.AutoField(primary_key=True, serialize=False)),
                ('risk_name', models.CharField(max_length=255)),
                ('risk_severity', models.CharField(max_length=50)),
                ('regulatory_requirement', models.TextField(blank=True, null=True)),
                ('compliance_status', models.CharField(max_length=50)),
                ('last_review_date', models.DateField(blank=True, null=True)),
                ('improvement_actions', models.TextField(blank=True, null=True)),
                ('supporting_documents', models.FileField(upload_to='risk_documents/')),
                ('review_frequency', models.CharField(max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risk_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='StakeholderEngagement',
            fields=[
                ('stakeholder_id', models.AutoField(primary_key=True, serialize=False)),
                ('stakeholder_group', models.CharField(max_length=255)),
                ('engagement_type', models.TextField(blank=True, null=True)),
                ('feedback_collected', models.TextField(blank=True, null=True)),
                ('action_taken', models.TextField(blank=True, null=True)),
                ('communication_date', models.DateField(blank=True, null=True)),
                ('key_issues', models.TextField(blank=True, null=True)),
                ('resolution_status', models.CharField(max_length=50)),
                ('supporting_documents', models.FileField(upload_to='stakeholder_documents/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stakeholder_owner', to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='StrategicDirection',
            fields=[
                ('strategy_id', models.AutoField(primary_key=True, serialize=False)),
                ('objective', models.TextField(blank=True, null=True)),
                ('strategic_alignment', models.TextField(blank=True, null=True)),
                ('kpi', models.TextField(blank=True, null=True)),
                ('resources_allocated', models.TextField(blank=True, null=True)),
                ('review_frequency', models.CharField(max_length=50)),
                ('last_review_date', models.DateField(blank=True, null=True)),
                ('approval_status', models.CharField(max_length=50)),
                ('supporting_documents', models.FileField(upload_to='strategy_documents/')),
                ('comments', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strategy_owner', to='main_app.staff')),
            ],
        ),
    ]
