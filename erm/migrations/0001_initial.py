# Generated by Django 5.1.1 on 2024-11-27 09:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main_app', '0007_group_alter_staff_department_staff_group_section_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('kpi_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('control_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('implementation_date', models.DateField(default=django.utils.timezone.now)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('assessment_frequency', models.CharField(blank=True, choices=[('Monthly', 'Monthly'), ('Quarterly', 'Quarterly'), ('Annually', 'Annually')], max_length=50, null=True)),
                ('control_type', models.CharField(blank=True, choices=[('Preventive', 'Preventive'), ('Detective', 'Detective'), ('Corrective', 'Corrective')], max_length=50, null=True)),
                ('control_strength', models.CharField(blank=True, choices=[('Strong', 'Strong'), ('Adequate', 'Adequate'), ('Weak', 'Weak')], max_length=50, null=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='ControlAssessment',
            fields=[
                ('assessment_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('comments', models.TextField(blank=True, null=True)),
                ('effectiveness_rating', models.CharField(blank=True, choices=[('Excellent', 'Excellent'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], max_length=50, null=True)),
                ('assessed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.control')),
            ],
        ),
        migrations.CreateModel(
            name='ControlLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('activity', models.CharField(blank=True, null=True)),
                ('timestamp', models.DateField(default=django.utils.timezone.now)),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.control')),
            ],
        ),
        migrations.CreateModel(
            name='InherentRisk',
            fields=[
                ('risk_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('likelihood', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Very High', 'Very High')], default='Low', max_length=50)),
                ('impact', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Very High', 'Very High')], default='Low', max_length=50)),
                ('score', models.FloatField(default=0.0)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('source_of_risk', models.TextField(blank=True, null=True)),
                ('date_identified', models.DateField(default=django.utils.timezone.now)),
                ('risk_type', models.CharField(choices=[('Operational', 'Operational'), ('Strategic', 'Strategic'), ('Financial', 'Financial'), ('Compliance', 'Compliance')], default='Operational', max_length=50)),
                ('current_controls', models.TextField(blank=True, null=True)),
                ('review_frequency', models.CharField(choices=[('Monthly', 'Monthly'), ('Quarterly', 'Quarterly'), ('Annually', 'Annually')], default='Monthly', max_length=50)),
                ('rish_event', models.TextField(blank=True, null=True)),
                ('rish_cause', models.TextField(blank=True, null=True)),
                ('rish_impact', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.AddField(
            model_name='control',
            name='related_risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.inherentrisk'),
        ),
        migrations.CreateModel(
            name='KeyRiskIndicator',
            fields=[
                ('kri_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('threshold_lower', models.FloatField(default=0.0)),
                ('threshold_upper', models.FloatField(default=0.0)),
                ('current_value', models.FloatField(default=0.0)),
                ('measurement_frequency', models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly')], default='Monthly', max_length=50)),
                ('responsible_person', models.CharField(blank=True, default='Unassigned', max_length=255, null=True)),
                ('data_source', models.CharField(blank=True, max_length=255, null=True)),
                ('alert_triggers', models.CharField(choices=[('Email Alert', 'Email Alert'), ('Dashboard Notification', 'Dashboard Notification')], default='Email Alert', max_length=50)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=50)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.inherentrisk')),
            ],
        ),
        migrations.CreateModel(
            name='KeyMetric',
            fields=[
                ('metric_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(blank=True, null=True)),
                ('related_kri', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.keyriskindicator')),
            ],
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('On Hold', 'On Hold'), ('Completed', 'Completed')], default='Active', max_length=50)),
                ('priority_level', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], default='Medium', max_length=50)),
                ('kpis_linked', models.CharField(blank=True, max_length=255, null=True)),
                ('budget_allocated', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('strategic_importance', models.CharField(choices=[('Core', 'Core'), ('Supporting', 'Supporting')], default='Supporting', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.department')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.AddField(
            model_name='inherentrisk',
            name='associated_objective',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='erm.objective'),
        ),
        migrations.CreateModel(
            name='ObjectiveProgress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('progress_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('comments', models.TextField(blank=True, null=True)),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.objective')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectiveStrategy',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('strategy_name', models.CharField(max_length=255)),
                ('strategy_description', models.TextField(blank=True, null=True)),
                ('timeline', models.DateField(default=django.utils.timezone.now)),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.objective')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='RemediationAction',
            fields=[
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Not Started', max_length=100)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('associated_costs', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.inherentrisk')),
            ],
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('activity', models.CharField(blank=True, null=True)),
                ('timestamp', models.DateField(default=django.utils.timezone.now)),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.remediationaction')),
            ],
        ),
        migrations.CreateModel(
            name='ResidualRisk',
            fields=[
                ('residual_risk_id', models.AutoField(primary_key=True, serialize=False)),
                ('mitigation_actions', models.TextField(blank=True, null=True)),
                ('current_score', models.FloatField(default=0.0)),
                ('last_review_date', models.DateField(blank=True, null=True)),
                ('updated_score', models.FloatField(default=0.0)),
                ('next_review_date', models.DateField(blank=True, null=True)),
                ('responsible_party', models.CharField(blank=True, max_length=255, null=True)),
                ('residual_risk_rating', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Critical', 'Critical')], default='Low', max_length=50)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_inherent_risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.inherentrisk')),
            ],
        ),
        migrations.CreateModel(
            name='ResidualRiskAssessment',
            fields=[
                ('assessment_id', models.AutoField(primary_key=True, serialize=False)),
                ('updated_risk_value', models.FloatField(default=0.0)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('updated_risk_rating', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Critical', 'Critical')], default='Low', max_length=50)),
                ('assessed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_residual_risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.residualrisk')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAppetite',
            fields=[
                ('appetite_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_threshold', models.FloatField(default=0.0)),
                ('max_threshold', models.FloatField(default=0.0)),
                ('approving_authority', models.CharField(max_length=255)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('assessed_by', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_value', models.FloatField(default=0.0)),
                ('likelihood_score', models.IntegerField(default=0)),
                ('impact_score', models.IntegerField(default=0)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved')], default='pending', max_length=50)),
                ('risk', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='assessment_step', to='erm.risk')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('assessment_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('risk_value', models.FloatField(default=0.0)),
                ('probability_score', models.IntegerField(default=0)),
                ('impact_score', models.IntegerField(default=0)),
                ('assessed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.inherentrisk')),
            ],
        ),
        migrations.CreateModel(
            name='RiskDefine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('section', models.CharField(blank=True, max_length=255, null=True)),
                ('objective', models.TextField(blank=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_type', models.CharField(choices=[('Operational', 'Operational'), ('Strategic', 'Strategic'), ('Financial', 'Financial'), ('Compliance', 'Compliance')], default='Operational', max_length=50)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved')], default='pending', max_length=50)),
                ('risk', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='define_step', to='erm.risk')),
            ],
        ),
        migrations.CreateModel(
            name='RiskRadar',
            fields=[
                ('radar_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateField(default=django.utils.timezone.now)),
                ('zone', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], default='Low', max_length=100)),
                ('color', models.CharField(choices=[('Green', 'Green'), ('Yellow', 'Yellow'), ('Red', 'Red')], default='Green', max_length=100)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
                ('related_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.remediationaction')),
                ('related_risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.inherentrisk')),
            ],
        ),
        migrations.CreateModel(
            name='RiskTolerance',
            fields=[
                ('tolerance_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('accepted_tolerance_level', models.IntegerField(default=0)),
                ('monitoring_mechanism', models.TextField(blank=True, null=True)),
                ('current_status', models.CharField(choices=[('Within Tolerance', 'Within Tolerance'), ('Out of Tolerance', 'Out of Tolerance')], default='Within Tolerance', max_length=50)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('related_appetite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.riskappetite')),
                ('related_risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erm.inherentrisk')),
            ],
        ),
    ]
